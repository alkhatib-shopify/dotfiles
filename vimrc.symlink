set nocompatible
filetype off          " required for vundle

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'
Bundle 'tpope/vim-rails'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-haml'
Bundle 'tpope/vim-fugitive'
Bundle 'vim-ruby/vim-ruby'
Bundle 'kchmck/vim-coffee-script'
Bundle 'scrooloose/syntastic'
Bundle 'ervandew/supertab'
Bundle 'bogado/file-line'
Bundle 'chriskempson/vim-tomorrow-theme'
Bundle 'derekprior/vim-colorpack'
Bundle 'twe4ked/vim-peepopen'
Bundle 'git://github.com/wincent/Command-T.git'
filetype plugin indent on     " required!
 "
 " Brief help
 " :BundleList          - list configured bundles
 " :BundleInstall(!)    - install(update) bundles
 " :BundleSearch(!) foo - search(or refresh cache first) for foo
 " :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
 "
 " see :h vundle for more details or wiki for FAQ
 " NOTE: comments after Bundle command are not allowed..


syntax on

function! <SID>StripTrailingWhitespaces()
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  call cursor(l, c)
endfunction

set number            " line numbers
set ruler             " line and column numbers
set showcmd           " show incomplete commands
set showmode          " show mode name below status bar
set cursorline        " highlight current line
set winwidth=82       " minimum width for active split
set encoding=utf-8
set clipboard=unnamed " use the system clipboard

" Whitespace stuff
set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set shiftround
set list listchars=tab:->,trail:Â·

" Line highlights

" Disabling Arrow Keys to force normal mode movement.
noremap   <Up>     <NOP>
noremap   <Down>   <NOP>
noremap   <Left>   <NOP>
noremap   <Right>  <NOP>

" Searching
set hlsearch          " highlight searches (:noh to turn off)
set incsearch         " highlight while typing search
set ignorecase        " case insensitive searching
set smartcase         " overrides ignorecase when pattern contains caps

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*
set wildignore+=.idea,tmp,vendor/bundle/**,*.png,*.jpg,*.gif

" ctags setting
let g:rails_ctags_arguments='--languages=-javascript --exclude=log --exclude=tmp --exclude=.git --exclude=.idea'
set tags=./tmp/tags,./tags

" use Ack instead of grep
set grepprg=ack

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" Status bar
set laststatus=2      " always show the status bar

" Directories for swp files
set backupdir=~/.vim/backup
set directory=~/.vim/backup

" Enable syntastic syntax checking
let g:syntastic_check_on_open=1
let g:syntastic_enable_highlighting=0

" jj to switch back to normal mode
:inoremap jj <Esc>

" Set the leader key
let mapleader=","

" File Navigation
" %% to current file path
cnoremap %% <C-R>=expand('%:h').'/'<cr>

" Toggle list characters
nnoremap <leader>ti :setl list!<cr>

" Fuzzy finder: ignore stuff that can't be opened, and generated files
let g:fuzzy_ignore = "*.png;*.PNG;*.JPG;*.jpg;*.GIF;*.gif;vendor/**;coverage/**;tmp/**;rdoc/**"
let g:CommandTMaxHeight=50
let g:CommandTMatchWindowAtTop=1

" Command-T mappings
map <leader>f :CommandT<cr>
map <Leader>rf :CommandTFlush<CR>:CommandT<CR>

" Easy buffer navigation
noremap <C-h>  <C-w>h
noremap <C-j>  <C-w>j
noremap <C-k>  <C-w>k
noremap <C-l>  <C-w>l
noremap <leader>v <C-w>v

" Switch between last two open files
nnoremap <leader><leader> <c-^>

" Substitute
nnoremap <leader>s :%s//<left>

" Tab configuration
map <leader>tn :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove

" Hide highlighted terms
map <silent> <leader><cr> :noh<cr>

" Typos
command! Q q
command! W w

" Saving with control-s
map <C-s> <esc>:w<CR>
imap <C-s> <esc>:w<CR>

if has('autocmd')
  " Resize splits when the window is resized
  au VimResized * exe "normal! \<c-w>="

  " Remove trailing spaces from all lines
  au BufWritePre * :call <SID>StripTrailingWhitespaces()

  autocmd BufWinEnter,WinEnter * setlocal cursorline
  autocmd BufWinLeave,WinLeave * setlocal nocursorline

  autocmd BufWinEnter,WinEnter * setlocal colorcolumn=80
  autocmd BufWinLeave,WinLeave * setlocal colorcolumn=0

  " File Type Settings
  au FileType text setlocal textwidth=78
  au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,Guardfile,config.ru,*.jbuilder}    set ft=ruby
  au BufNewFile,BufRead *.json set ft=javascript

  " Whitespace setting for PTK project that refuses to use soft tabs
  au BufRead,BufNewFile ~/code/git/ptk/* setl noexpandtab nolist
  au BufRead,BufNewFile ~/code/git/ptk/*.java setl tabstop=4

endif

" Color Scheme
syntax enable
set t_Co=256
set background=light
colorscheme github

" Toggle between color schemes
nnoremap <silent> <F9> :exec "color " .
    \ ((g:colors_name == "github") ? "tomorrow-night" : "github")<CR>

