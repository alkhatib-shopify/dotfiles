scriptencoding utf-8

set noshowmode        " powerline shows the mode
set hlsearch          " highlight searches (:noh to turn off)
set ignorecase        " case insensitive searching
set smartcase         " overrides ignorecase when pattern contains caps
set laststatus=2      " Always display the status line
set winwidth=80       " minimum width for active split
set clipboard=unnamed " use OS clipboard
set nofoldenable

" Whitespace stuff
set nowrap
set list listchars=tab:->,trail:Â·

" Color scheme
colorscheme github
highlight NonText guibg=#060606
highlight Folded  guibg=#0A0A0A guifg=#9090D0

augroup localEx
  autocmd!

  " File Type Settings
  autocmd filetype qf setlocal wrap

  " Help System Speedups
  autocmd filetype help nnoremap <buffer><CR> <c-]>
  autocmd filetype help nnoremap <buffer><bs> <c-T>
  autocmd filetype help nnoremap <buffer>q :q<CR>
  autocmd filetype help set nonumber

  set updatetime=1000
  autocmd BufReadPost,BufWritePost * call ale#Lint()
  autocmd CursorHold * call ale#Lint()
  autocmd CursorHoldI * call ale#Lint()
  autocmd InsertEnter * call ale#Lint()
  autocmd InsertLeave * call ale#Lint()
augroup END

" git shortcuts
noremap <leader>gb :Gblame<CR>
noremap <leader>gd :Gdiff<CR>

" open various consoles
noremap <leader>gg :call system("tmux split-window -v -c '#{pane_current_path}' -p 30 'gitsh'")<CR>
noremap <leader>gc :call system("tmux split-window -v -c '#{pane_current_path}' -p 30 'dev-console'")<CR>
noremap <leader>gp :call system("tmux split-window -v -c '#{pane_current_path}' -p 30 'dev-db-console'")<CR>

" simple vertical splits
map <leader>v <C-w>v

" Mappings for quick search & replace.
" Do a / search first, then leave pattern empty in :s// to use last
map <Leader>sra :%s///g<Left><Left>
map <Leader>src :%s///gc<Left><Left><Left>

" Hide highlighted terms
map <silent> <leader><CR> :noh<CR>

" vim-test mappings
let g:test#strategy = 'dispatch'
nnoremap <silent> <Leader>t :TestFile<CR>
nnoremap <silent> <Leader>s :TestNearest<CR>
nnoremap <silent> <Leader>l :TestLast<CR>
nnoremap <silent> <Leader>a :TestSuite<CR>
nnoremap <silent> <leader>gt :TestVisit<CR>

" Disable inherited syntastic
let g:syntastic_mode_map = {
  \ 'mode': 'passive',
  \ 'active_filetypes': [],
  \ 'passive_filetypes': [] }

let g:ale_lint_on_text_changed = 0
let g:ale_linters = {
  \   'javascript': ['eslint'],
  \   'scss': ['scss-lint'] }

nnoremap ]r :ALENextWrap<CR>
nnoremap [r :ALEPreviousWrap<CR>
